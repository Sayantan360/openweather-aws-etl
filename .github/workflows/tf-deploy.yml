name: Deploy Infrastructure

on:
  workflow_dispatch:
    inputs:
        # tfpath:
        #   description: 'TF File Path'     
        #   required: false
        #   default: 'infra-templates/main'

        # s3_name:
        #   description: 'S3 bucket name'
        #   required: false
        #   default: tgnas3bucket1
        #   type: string

        environment:
            type: choice
            description: 'Select environment to deploy'
            options: 
                - 'dev'
                - 'preprod'
                - 'prod'
            required: false
            default: 'none'

permissions:
    id-token: write
    contents: read

jobs:
  terraform-deploy:
    name: Deploy Infra
    runs-on: ubuntu-latest
    # env: 
    #   TF_VAR_bucket_name: ${{ vars.BUCKET_NAME }}
    environment: 
      name: ${{ github.event.inputs.environment }}
    defaults:
      run:
        working-directory: tf-src

    steps:
        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        - name: Checkout code from main branch
          uses: actions/checkout@v2

        # Configure AWS Credentials
        - name: Configure AWS Credentials
          uses: aws-actions/configure-aws-credentials@v4
          with:
            aws-access-key-id: ${{ secrets.ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY }}
            aws-region: ${{ secrets.AWS_REGION }}

        - name: Setup Terraform
          uses: hashicorp/setup-terraform@v2
          with:
            terraform_version: 1.4.6
            terraform_wrapper: false

        - name: Terraform Format
          id: format
          run: terraform fmt -check
          continue-on-error: true

        - name: Terraform Init
          id: init
          run: terraform init

        - name: Terraform Validate
          id: validate
          run: terraform validate

        - name: Terraform Plan
          id: plan
          run: terraform plan -no-color

        - name: Terraform Plan Status
          id: plan-status
          if: steps.plan.outcome == 'failure'
          run: exit 1

        - name: Terraform Apply
          id : apply
          run: terraform apply -auto-approve